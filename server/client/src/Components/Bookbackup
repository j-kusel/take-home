import React from 'react';
import styled from 'styled-components';
//import styled from 'styled-components';
import { useMutation, gql } from '@apollo/client';
import { BOOKING_QUERY, CREATE_BOOKING_MUTATION } from '../util/schemas';
import { useState } from 'react';

import SpruceButton from './Styled/SpruceButton';

const ConfirmButton = styled(SpruceButton)`
    float: right;
`;

const halfClass = `
    .half {
        td:first-child {
            padding-right: 10px;
        }
        td:last-child {
            padding-left: 10px;
        }
        input {
            width: 80%;
            text-align: right;
        } 
        .zip {
            float: right;
        }
    }
`;

const StyledModal = styled.div`
    table {
        outline: 1px solid black;
    }
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    padding: 20px;
    padding: 20px;
    background-color: white;
    border-color: gray;
    border-radius: 8px;
    box-shadow: 0px 0px 5px black;
    z-index: 100;
    h1 {
        margin: 10px 0px
    }
    
    td {
        padding: 4px 0px;
    }

    td:first-child {
        padding-right: 25px;
    }
    td:last-child {
        padding-left: 25px;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    input[type=number] {
        -moz-appearance: textfield;
    }

    input {
        font-size: 1.125em;
        padding: 4px;
    }

    select {
        font-size: 1.125em;
        width: 100%;
        background-color: white;
        border: 1px solid gray;
        border-radius: 2px;
        padding: 4px;
    }

    ${halfClass}
`;

export default (props) => {
    const [name, setName] = useState('');
    const [email, setEmail] = useState('');
    const [address, setAddress] = useState('');
    const [city, setCity] = useState('');
    const [state, setState] = useState('');
    const [zipcode, setZipcode] = useState('');
    const [type, setType] = useState('');
    const [date, setDate] = useState('');
    const [time, setTime] = useState('');

    const [createBooking, {error}] = useMutation(CREATE_BOOKING_MUTATION, {
        update(cache, { data: { CreateBooking } }) {
            cache.modify({
                fields: {
                    getBookings(cachedBookings=[]) {
                        const newBooking = cache.writeQuery({
                            query: BOOKING_QUERY,
                            data: {
                                getBookings: Object.assign({ __typename: 'Booking' }, CreateBooking)
                            }
                        });
                        return [...cachedBookings, newBooking];
                    }
                }
            });
        }
    });

    const handleBooking = () => {
        const variables = {
            name,
            email,
            address,
            city,
            state,
            zipcode: parseInt(zipcode, 10),
            booking_type: type,
            booking_date: date,
            booking_time: time // '2022-02-25T23:15:00Z'
        };
        console.log(variables);
        createBooking({ variables });
    }

    const form = (
        <table>
            <tbody>
                <tr>
                    <td>
                        <label>Name</label>
                        <br/>
                        <input type="text" value={name} onChange={e => setName(e.target.value)}></input>
                    </td>
                    <td>
                        <label>Booking Type</label>
                        <br/>
                        <select value={type} onChange={e => setType(e.target.value)}>
                            <option value=""></option>
                            <option value="DOG_WALK">Dog Walk</option>
                            <option value="HOUSEKEEPING">Housekeeping</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>Email</label>
                        <br/>
                        <input type="text" value={email} onChange={e => setEmail(e.target.value)}></input>
                    </td>
                    <td>
                        <label>Booking Date</label>
                        <br/>
                        <input type="text" value={date} onChange={e => setDate(e.target.value)}></input>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>Street Address</label>
                        <br/>
                        <input type="text" value={address} onChange={e => setAddress(e.target.value)}></input>
                    </td>
                    <td>
                        <label>Booking Time</label>
                        <br/>
                        <input type="text" value={time} onChange={e => setTime(e.target.value)}></input>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>City</label>
                        <br/>
                        <input type="text" value={city} onChange={e => setCity(e.target.value)}></input>
                    </td>
                    <td></td>
                </tr>
                <tr style={{padding: '0px'}}>
                    <td style={{padding: '0px'}}>
                        <table style={{padding: '0px'}}>
                            <tbody style={{width: '100%'}}>
                            <tr className="half">
                                <td>
                                <label>State</label>
                                <br/>
                                <input type="text" value={state} onChange={e => setState(e.target.value)}></input>
                                </td>
                                <td className="zip">
                                <label>Zip code</label>
                                <br/>
                                <input type="number" value={zipcode} onChange={e => setZipcode(e.target.value)}></input>
                                </td>
                            </tr>
                            </tbody>
                        </table> 
                    </td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    );

    return (<StyledModal>
        <h1>Create booking</h1>
        {form}
        <ConfirmButton onClick={handleBooking}>Create booking</ConfirmButton> 
    </StyledModal>);
}
